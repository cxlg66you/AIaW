export default {
  pluginsMarket: {
    title: 'Plugins',
    manualInstall: 'Manual Install',
    selectConfig: 'Select Config File',
    importFromClipboard: 'Import from Clipboard',
    addMcpPlugin: 'Add MCP Plugin',
    rightDrawerTip: 'Installed plugins are in the right sidebar',
    search: 'Search',
    loadError: 'Failed to load plugin list',
    retry: 'Retry'
  },
  assistantView: {
    header: 'Assistant Settings',
    assistant: 'Assistant',
    name: 'Name',
    avatar: 'Avatar',
    roleSetting: 'Role Setting',
    promptTemplate: 'Prompt Template',
    promptVars: 'Prompt Variables',
    promptVarsGuide: 'Refer to the usage guide for prompt variables/templates',
    model: 'Model',
    modelEmptyTip: 'Leave blank to use global model settings; this setting will also be overridden by the model switched in the conversation',
    provider: 'Provider',
    providerEmptyTip: 'Leave blank to use global provider settings',
    plugins: 'Plugins',
    enable: 'Enable',
    pluginFunction: 'Plugin Function',
    generateSettings: 'Generation Settings',
    stream: 'Stream',
    maxRetries: 'Max Retries',
    maxRetriesTip: 'Maximum number of retries when generation fails',
    maxSteps: 'Max Calls',
    maxStepsTip: 'When tool call is enabled, the maximum number of times the model is called in a single reply',
    contextNum: 'Context Number',
    contextNumTip: 'Maximum number of contexts including the current user message. Leave blank for no limit',
    promptRole: 'Prompt Role',
    modelParams: 'Model Parameters',
    temperature: 'Temperature',
    temperatureTip: 'The higher the value, the more random the reply',
    topP: 'Top P',
    topPTip: 'Similar to randomness, but do not change with randomness together',
    presencePenalty: 'Presence Penalty',
    presencePenaltyTip: 'The higher the value, the more likely it is to expand to new topics',
    frequencyPenalty: 'Frequency Penalty',
    frequencyPenaltyTip: 'The higher the value, the more likely it is to reduce repeated words',
    stopSequences: 'Stop Sequences',
    stopSequencesTip: 'When the model generates a stop word, it will stop generating. Press Enter to add a value.',
    maxTokens: 'Single Reply Limit',
    maxTokensTip: 'Maximum number of tokens generated at once',
    seed: 'Seed',
    seedTip: 'Seed for random sampling (integer). Used to generate deterministic results.',
    notAllParamsSupported: 'Tip: Not all providers support all parameters',
    metadata: 'Metadata',
    author: 'Author',
    description: 'Description',
    homepage: 'Homepage',
    export: 'Export',
    exportTip1: 'Export assistant as JSON for',
    exportTip2: 'sharing or publishing',
    exportToFile: 'Export to File',
    exportToClipboard: 'Export to Clipboard'
  },
  assistantsMarket: {
    title: 'Assistants',
    import: 'Import',
    selectFile: 'Select File',
    importFromClipboard: 'Import from Clipboard',
    search: 'Search',
    add: 'Add',
    addToGlobal: 'Add to Global',
    addToWorkspace: 'Add to Workspace',
    loadError: 'Failed to load assistant list',
    retry: 'Retry',
    formatError: 'Assistant data format error',
    addError: 'Failed to add',
    added: 'Added',
    importError: 'Import failed'
  },
  editArtifact: {
    language: 'Language',
    edit: 'Edit',
    preview: 'Preview',
    readable: 'Readable',
    writable: 'Writable'
  },
  pluginAdjust: {
    infoProvider: 'Info Provider',
    parameters: 'Parameters',
    enable: 'Enable',
    toolCall: 'Tool Call',
    variables: 'Variables',
    globalSettingsTip: 'Tip: The global settings for plugins are in',
    pluginSettings: 'Plugin Settings',
    noConfigurableItems: 'This plugin has no configurable items',
    pluginFunction: 'Plugin Function'
  },
  workspaceIndex: {
    title: 'Workspace Home'
  },
  workspaceSettings: {
    title: 'Workspace Settings',
    defaultAssistant: 'Default Assistant',
    avatar: 'Workspace Icon',
    homeContent: 'Home Content',
    variables: 'Workspace Variables',
    inputPlaceholder: 'Enter variable content...'
  },
  pluginSettings: {
    title: 'Plugin Settings',
    info: 'Info',
    name: 'Name',
    description: 'Description',
    author: 'Author',
    homepage: 'Homepage',
    icon: 'Icon',
    fileParsing: 'File Parsing',
    enable: 'Enable',
    mimeType: 'MIME Type',
    settings: 'Settings'
  },
  dialogView: {
    assistantModel: 'Assistant Model',
    globalDefault: 'Global Default',
    commonModels: 'Common Models',
    modelsConfigGuide1: 'You can configure Common Models in',
    modelsConfigGuide2: '',
    settings: 'Settings',
    noobAlert: {
      title: 'Need to create a new conversation?',
      message: 'A common mistake for new users is to always ask questions in one conversation, even if the questions are not related.\nIn fact, when you ask a new question that is not related to the previous text, you should create a new conversation to avoid the cumulative context leading to a continuous increase in input overhead.',
      okBtn: 'I will create a new conversation',
      cancelBtn: 'I know this, no need to remind me'
    },
    errors: {
      setAssistant: 'Please set up an assistant',
      configModel: 'Please configure a provider, model, or log in',
      loadPluginList: 'Failed to load plugin list',
      genTitle: 'Failed to summarize conversation, please check system assistant settings',
      insufficientQuota: 'Insufficient model service quota'
    },
    enabledPlugins: 'Enabled Plugins',
    messageTokens: 'Last Message Token Consumption',
    tokenPrompt: 'Prompt',
    tokenCompletion: 'Completion',
    send: 'Send',
    chatPlaceholder: 'Enter chat content...',
    recharge: 'Recharge',
    addImage: 'Add Image',
    addFile: 'Add File',
    showVars: 'Show Variables',
    hideVars: 'Hide Variables',
    pastedText: 'Pasted text: {text}',
    fileTooLarge: 'File too large (> {maxSize}MB)',
    summarizeFailed: 'Failed to summarize conversation, please check system assistant settings',
    convertedToArtifact: 'Converted to Artifact',
    callPluginInfoFailed: 'Failed to call plugin information: {message}',
    pluginPromptParseFailed: 'Plugin "{title}" prompt template parsing failed',
    promptParseFailed: 'Prompt parsing failed, please check assistant prompt template'
  }
}
